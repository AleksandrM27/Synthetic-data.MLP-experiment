import pandas as pd
import numpy as np
from sklearn.metrics import accuracy_score, f1_score, roc_auc_score, confusion_matrix

history_window = 30
horizon = 5
threshold = 0.05

df = pd.read_excel()

print("Fold | Accuracy | F1-score | ROC AUC | Доля экстремумов (%) | Кол-во | ConfMat")
print("-" * 90)
for fold in range(1, 6):
    test_series = df[f"Fold {fold} Test"].dropna().values

    y_test = []
    for t in range(0, len(test_series) - history_window - horizon + 1, horizon):
        base_price = test_series[t + history_window - 1]
        future_window = test_series[t + history_window : t + history_window + horizon]
        max_move = np.max(np.abs(future_window - base_price) / base_price)
        y_target = int(max_move >= threshold)
        y_test.append(y_target)
    y_test = np.array(y_test)

    y_pred = np.zeros_like(y_test)
    y_pred[1:] = y_test[:-1]
    y_pred[0] = 0  # первый пример без lag

    acc = accuracy_score(y_test, y_pred)
    f1 = f1_score(y_test, y_pred, zero_division=0)
    try:
        roc = roc_auc_score(y_test, y_pred)
    except:
        roc = np.nan
    cm = confusion_matrix(y_test, y_pred)

    print(f"{fold:>4} | {acc:>8.3f} | {f1:>8.3f} | {roc:>7.3f} | {np.mean(y_test)*100:>20.2f} | {len(y_test):>6} | {cm.tolist()}")
